#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2

// Media controls
#define PREV C_PREVIOUS
#define PLAY C_PLAY_PAUSE
#define NEXT C_NEXT

// Display controls
#define BRIGHT C_BRIGHTNESS_INC
#define DARK C_BRIGHTNESS_DEC

// Window controls
#define APPS C_AC_DESKTOP_SHOW_ALL_WINDOWS
#define SEARCH C_AC_SEARCH


/ {
    behaviors {
        /*
         * htl
         *
         * - tab once to switch layer
         * - hold to enable layer until release
         */
        htl: hold_tab_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAB_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&mo>, <&to>;
        };

        /*
         * hm
         * 
         * - tab once for key press 2nd item
         * - hold for key press 1st item
         */
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        // different key press on each press (LSHFT -> CAPS Lock)
        // https://zmk.dev/docs/behaviors/tap-dance

        /*
         * td_caps
         *
         * - tab once for 2nd item
         * - tab twice for 1st item
         */
        td_caps: tap_dance_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_CAPS";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp CAPS>, <&kp LSHFT>;
        };

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&hm N1 Q>, <&hm N1 ESC>;
        };

        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&hm LALT A>, <&kp TAB>;
        };

        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&hm N0 EQUAL>, <&kp MINUS>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_escape {
            timeout-ms = <30>;
            key-positions = <2 3>;
            bindings = <&kp ESC>;
        };

        combo_bracket_left {
            timeout-ms = <30>;
            key-positions = <16 17>;
            bindings = <&kp LBKT>;
        };

        combo_bracket_right {
            timeout-ms = <30>;
            key-positions = <18 19>;
            bindings = <&kp RBKT>;
        };

        combo_brace_left {
            timeout-ms = <30>;
            key-positions = <15 16>;
            bindings = <&kp LEFT_BRACE>;
        };

        combo_brace_right {
            timeout-ms = <30>;
            key-positions = <19 20>;
            bindings = <&kp RIGHT_BRACE>;
        };

        combo_parenthesis_left {
            timeout-ms = <30>;
            key-positions = <28 29>;
            bindings = <&kp LEFT_PARENTHESIS>;
        };

        combo_parenthesis_right {
            timeout-ms = <30>;
            key-positions = <30 31>;
            bindings = <&kp RIGHT_PARENTHESIS>;
        };

        combo_pipe {
            timeout-ms = <30>;
            key-positions = <27 28>;
            bindings = <&kp PIPE>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    macros {
        delete_word: delete_word {
            compatible = "zmk,behavior-macro";
            label = "ZM_delete_word";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp Z &kp M &kp K>
                , <&macro_release &kp LSHFT>
                ;
        };
    };

    // cheat-sheet https://peccu.github.io/zmk-cheat-sheet/
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESC         &td0            &hm N2 W        &hm N3 F            &hm N4 P        &hm N5 G        &hm N6 J        &hm N7 L            &hm N8 U            &hm N9 Y            &td2               &hm LA(BSPC) BSPC
                &kp TAB         &td1            &hm LCTRL R     &hm LSHIFT S        &hm LGUI T      &kp D           &kp H           &hm RGUI N          &hm RSHIFT E        &hm RCTRL I         &hm RALT O          &kp ENTER
                &kp LSHFT       &kp Z           &kp X           &kp C               &kp V           &kp B           &kp K           &kp M               &kp COMMA           &kp DOT             &hm BSLH FSLH       &kp MINUS
                                                                &htl LOWER DEFAULT  &kp LCMD        &kp SPACE                       &kp ENTER           &hm LA(BSPC) BSPC   &htl RAISE DEFAULT
            >;
        };

        lower_layer {
            bindings = <
                &kp ESC         &hm F1 DARK     &hm F2 BRIGHT   &hm F3 APPS         &hm F4 SEARCH   &kp F5          &hm PG_DN DOWN  &kp RIGHT           &hm F9 C_MUTE       &hm F10 C_VOL_DOWN  &hm F11 C_VOL_UP    &none
                &none           &hm LALT EXCL   &hm LCTRL AT    &hm LSHIFT HASH     &hm LGUI DOLLAR &kp PERCENT     &kp CARET       &hm RGUI AMPERSAND  &hm RSHIFT SEMI     &hm RCTRL APOS      &hm RALT ASTERISK   &none
                &none           &none           &none           &none               &none           &none           &hm PG_UP UP    &kp LEFT            &kp GRAVE           &none               &none               &none
                                                                &htl LOWER DEFAULT  &kp LCMD        &kp SPACE                       &kp RIGHT_CONTROL   &kp DEL        &htl RAISE DEFAULT

            >;
        };

        raise_layer {
            bindings = <
                &kp ESC         &kp F1          &kp F2          &kp F3              &kp F4          &kp F5          &kp F6          &kp F7              &hm F8 UP           &kp F9              &kp F10             &kp F11
                &none           &none           &none           &none               &none           &none           &none           &kp LEFT            &kp DOWN            &kp RIGHT           &kp LG(LS(N4))      &none
                &none           &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2        &bt BT_SEL 3    &none           &none           &bt BT_CLR          &none               &none               &none               &none
                                                                &htl LOWER DEFAULT  &kp LCMD        &kp SPACE                       &kp RIGHT_CONTROL   &kp DEL        &htl RAISE LOWER
            >;
        };

        tri_layer {
            bindings = <
                &kp ESC         &none           &none           &none               &none           &none           &none           &kp N7              &kp N8              &kp N9              &none               &none
                &none           &none           &none           &none               &none           &none           &none           &kp N4              &kp N5              &kp N6              &none               &none
                &none           &none           &none           &none               &none           &none           &kp N0          &kp N1              &kp N2              &kp N3              &none               &none
                                                                &htl LOWER DEFAULT  &kp LCMD        &kp SPACE                       &kp RIGHT_CONTROL   &kp DEL             &htl RAISE LOWER
            >;
        };
    };
};

