#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define CODING 1
#define MEDIA 2
#define COLEMAK 3

/ {
    behaviors {
        // enables a layer while key is pressed and disables on release => enables layer when tabbed
        htl: hold_tab_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAB_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&mo>, <&to>;
        };

        // triggers key press on first item when held => second item when tabbed
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        // different key press on each press (shift -> Caps Lock)
        // https://zmk.dev/docs/behaviors/tap-dance
        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_bracket_left {
            timeout-ms = <15>;
            key-positions = <16 17>;
            bindings = <&kp LBKT>;
        };

        compatible = "zmk,combos";
        combo_bracket_right {
            timeout-ms = <15>;
            key-positions = <18 19>;
            bindings = <&kp RBKT>;
        };

        combo_brace_left {
            timeout-ms = <15>;
            key-positions = <15 16>;
            bindings = <&kp LEFT_BRACE>;
        };

        combo_brace_right {
            timeout-ms = <15>;
            key-positions = <19 20>;
            bindings = <&kp RIGHT_BRACE>;
        };

        combo_parenthesis_left {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp LEFT_PARENTHESIS>;
        };

        combo_parenthesis_right {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&kp RIGHT_PARENTHESIS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
                &kp ESC    &hm N1 Q  &hm N2 W  &hm N3 E      &hm N4 R       &hm N5 T        &hm N6 Y    &hm N7 U    &hm N8 I      &hm N9 O     &hm N0 P     &kp BSPC
                &kp TAB    &kp A  &kp S  &kp D      &kp F       &kp G        &kp H    &kp J    &kp K      &kp L     &kp SEMI  &kp ENTER
                &td CAPS LSHFT  &kp Z  &kp X  &kp C      &kp V       &kp B        &kp N    &kp M    &kp COMMA  &kp DOT   &td FSLH BSLH  &td CAPS RSHFT
                                         &to BASE   &lt CODING SPACE   &kp LCMD      &kp DEL &hm RIGHT_ALT SPACE  &htl CODING CODING

                 // LC(LG(LS(N4)))  ->
            >;
        };

        coding {
            bindings = <
                &kp ESC               &kp EXCLAMATION    &kp AT_SIGN  &kp HASH  &kp DOLLAR      &kp PERCENT             &kp CARET              &kp AMPERSAND    &kp ASTERISK  &none  &none  &none
                &none                 &none              &none        &none  &none  &none                &none               &none  &none         &none              &td UP_ARROW PG_UP     &none
                &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none       &none    &none          &none    &none  &none            &none        &kp LEFT_ARROW        &td DOWN_ARROW PG_DN    &kp RIGHT
                                              &to BASE     &lt CODING SPACE          &kp LCMD               &kp DEL                &hm RIGHT_ALT SPACE          &to MEDIA
            >;
        };

        media {
            bindings = <
                &kp F1      &kp F2        &kp F3        &kp F4        &kp F5      &kp F6       &kp F7            &kp F8          &kp F10     &kp F11  &kp F12  &kp C_VOL_UP
                &none      &none        &none        &none        &none      &none       &kp C_PLAY_PAUSE  &kp C_PREVIOUS  &kp C_NEXT  &none    &none   &kp C_VOLUME_DOWN
                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR         &none            &none          &none      &none    &none   &kp K_MUTE
                                                        &to BASE         &lt CODING SPACE  &kp LCMD    &kp DEL           &hm RIGHT_ALT SPACE          &to COLEMAK
            >;
        };

        colemak {
            bindings = <
                &kp ESC       &hm N1 Q   &hm N2 W   &hm N3 F       &hm N4 P       &hm N5 B    &hm N6 J    &hm N7 L      &hm N8 U      &hm N9 Y    &hm N0 SQT   &kp BSPC
                &kp TAB       &kp A   &kp R   &kp S       &kp T       &kp G    &kp M    &kp N                &kp E      &kp I    &kp O     &kp ENTER
                &kp LSHFT     &kp Z   &kp X   &kp C       &kp D       &kp V    &kp K    &kp H                &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                                              &to BASE    &lt CODING SPACE  &kp LCMD  &kp DEL  &hm RIGHT_ALT SPACE  &to CODING
            >;
        };
    };
};
