#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define MEDIA 1
#define QWERTY 2

// Media controls
#define VOL_DOWN C_VOLUME_DOWN
#define VOL_UP C_VOLUME_UP
#define VOL_MUTE K_MUTE
#define PREV C_PREVIOUS
#define PLAY C_PLAY_PAUSE
#define NEXT C_NEXT

// Display controls
#define BRIGHT C_BRIGHTNESS_INC
#define DARK C_BRIGHTNESS_DEC

// Window controls
#define APPS C_AC_DESKTOP_SHOW_ALL_WINDOWS
#define SEARCH C_AC_SEARCH


/ {
    behaviors {
        /*
         * htl
         *
         * - tab once to switch layer
         * - hold to enable layer until release
         */
        htl: hold_tab_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAB_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&mo>, <&to>;
        };

        /*
         * hm
         * 
         * - tab once for key press 2nd item
         * - hold for key press 1st item
         */
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        // different key press on each press (LSHFT -> CAPS Lock)
        // https://zmk.dev/docs/behaviors/tap-dance

        /*
         * td_caps
         *
         * - tab once for 2nd item
         * - tab twice for 1st item
         */
        td_caps: tap_dance_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_CAPS";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&kp CAPS>, <&kp LSHFT>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_bracket_left {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp LBKT>;
        };

        compatible = "zmk,combos";
        combo_bracket_right {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&kp RBKT>;
        };

        combo_brace_left {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp LEFT_BRACE>;
        };

        combo_brace_right {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp RIGHT_BRACE>;
        };

        combo_parenthesis_left {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp LEFT_PARENTHESIS>;
        };

        combo_parenthesis_right {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&kp RIGHT_PARENTHESIS>;
        };
    };

    macros {
        delete_word: delete_word {
            label = "ZM_delete_word";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp Z &kp M &kp K>
                , <&macro_release &kp LSHFT>
                ;
        };
    };

    // cheat-sheet https://peccu.github.io/zmk-cheat-sheet/
    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
                &kp ESC         &hm N1 Q        &hm N2 W        &hm N3 F        &hm N4 P        &hm N5 B        &hm N6 J        &hm N7 L        &hm N8 U        &hm N9 Y        &hm N0 GRAVE    &hm LA(BSPC) BSPC
                &kp TAB         &kp A           &kp R           &kp S           &kp T           &kp G           &kp M           &kp N           &kp E           &kp I           &kp O           &kp ENTER
                &kp LSHFT       &kp Z           &kp X           &kp C           &kp D           &kp V           &kp K           &kp H           &kp COMMA       &kp DOT         &kp FSLH        &kp RIGHT_CONTROL
                                                                &htl MEDIA BASE &kp LCMD        &kp SPACE                       &kp SPACE       &hm RALT DEL    &to MEDIA
            >;
        };

        media {
            bindings = <
                &hm F1 DARK     &hm F2 BRIGHT   &hm F3 APPS     &hm F4 SEARCH   &kp F5          &kp F6          &hm F7 PREV     &hm F8 PLAY     &hm F9 NEXT     &hm F10 VOL_MUTE    &hm F11 VOL_DOWN        &hm F12 VOL_UP
                &kp TAB         &kp EXCLAMATION &kp AT_SIGN     &kp HASH        &kp DOLLAR      &kp PERCENT     &kp CARET       &kp AMPERSAND   &kp ASTERISK    &kp LC(LG(LS(N4)))  &hm PG_UP UP_ARROW      &kp ENTER
                &kp LSHFT       &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_CLR      &kb MINUS       &kb SEMIKOLON   &none           &kp LEFT_ARROW      &hm PG_DN DOWN_ARROW    &kp RIGHT
                                                                &to BASE        &kp LCMD        &kp SPACE                       &kp SPACE       &hm RALT DEL    &to QWERTY

            >;
        };

        qwerty {
            bindings = <
                &kp ESC         &hm N1 Q        &hm N2 W        &hm N3 E        &hm N4 R        &hm N5 T        &hm N6 Y        &hm N7 U        &hm N8 I        &hm N9 O        &hm N0 P        &hm LA(BSPC) BSPC
                &kp TAB         &kp A  &kp S    &kp D           &kp F           &kp G           &kp H           &kp J           &kp K           &kp L           &kp SEMI        &kp ENTER
                &kp LSHFT       &kp Z  &kp X    &kp C           &kp V           &kp B           &kp N           &kp M           &kp COMMA       &kp DOT         &hm FSLH BSLH   &kp RIGHT_CONTROL
                                                                &htl MEDIA BASE &kp LCMD        &kp SPACE                       &kp SPACE       &hm RALT DEL    &htl MEDIA MEDIA
            >;
        };
    };
};
