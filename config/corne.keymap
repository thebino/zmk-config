#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define MEDIA 1
#define COLEMAK 2

/ {
    behaviors {
        // enables a layer while key is pressed and disables on release => enables layer when tabbed
        htl: hold_tab_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAB_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&mo>, <&to>;
        };

        // triggers key press on first item when held => second item when tabbed
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        // different key press on each press (LSHFT -> CAPS Lock)
        // https://zmk.dev/docs/behaviors/tap-dance
        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_bracket_left {
            timeout-ms = <15>;
            key-positions = <16 17>;
            bindings = <&kp LBKT>;
        };

        compatible = "zmk,combos";
        combo_bracket_right {
            timeout-ms = <15>;
            key-positions = <18 19>;
            bindings = <&kp RBKT>;
        };

        combo_brace_left {
            timeout-ms = <15>;
            key-positions = <15 16>;
            bindings = <&kp LEFT_BRACE>;
        };

        combo_brace_right {
            timeout-ms = <15>;
            key-positions = <19 20>;
            bindings = <&kp RIGHT_BRACE>;
        };

        combo_parenthesis_left {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp LEFT_PARENTHESIS>;
        };

        combo_parenthesis_right {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&kp RIGHT_PARENTHESIS>;
        };
    };

    macros {
        delete_word: delete_word {
            label = "ZM_delete_word";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp Z &kp M &kp K>
                , <&macro_release &kp LSHFT>
                ;
        };
    };

    // cheat-sheet https://peccu.github.io/zmk-cheat-sheet/
    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
                &kp ESC    &hm N1 Q  &hm N2 W  &hm N3 E      &hm N4 R       &hm N5 T        &hm N6 Y    &hm N7 U    &hm N8 I      &hm N9 O     &hm N0 P     &td BSPC LA(BSPC)
                &kp TAB    &kp A  &kp S  &kp D      &kp F       &kp G        &kp H    &kp J    &kp K      &kp L     &kp SEMI  &kp ENTER
                &td CAPS LSHFT  &kp Z  &kp X  &kp C      &kp V       &kp B        &kp N    &kp M    &kp COMMA  &kp DOT   &td FSLH BSLH  &td CAPS RSHFT
                                         &to BASE   &lt MEDIA SPACE   &kp LCMD      &kp DEL &hm RIGHT_ALT SPACE  &htl MEDIA MEDIA

                 // LC(LG(LS(N4)))  ->   LA(BSPC)
            >;
        };

        media {
            bindings = <
                &hm F1 C_BRIGHTNESS_DEC      &hm F2 C_BRIGHTNESS_INC        &hm F3 C_AC_DESKTOP_SHOW_ALL_WINDOWS       &hm F4 C_AC_SEARCH        &kp F5      &kp F6       &hm F7 C_PREVIOUS           &hm F8 C_PLAY_PAUSE         &hm F9 C_NEXT    &hm F10 C_MUTE  &hm F11 C_VOLUME_DOWN &hm F12 C_VOL_UP
                &kp EXCLAMATION  &kp AT_SIGN        &kp HASH        &kp DOLLAR        &kp PERCENT      &kp CARET       &kp AMPERSAND  &kp ASTERISK  &none  &none    &td UP_ARROW PG_UP   &none
                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR         &none            &none          &none      &kp LEFT_ARROW        &td DOWN_ARROW PG_DN    &kp RIGHT
                                                        &to BASE         &kp SPACE  &kp LCMD    &kp DEL           &hm RIGHT_ALT SPACE          &to COLEMAK
            >;
        };

        colemak {
            bindings = <
                &kp ESC       &hm N1 Q   &hm N2 W   &hm N3 F       &hm N4 P       &hm N5 B    &hm N6 J    &hm N7 L      &hm N8 U      &hm N9 Y    &hm N0 SQT   &td BSPC LA(BSPC)
                &kp TAB       &kp A   &kp R   &kp S       &kp T       &kp G    &kp M    &kp N                &kp E      &kp I    &kp O     &kp ENTER
                &td CAPS LSHFT     &kp Z   &kp X   &kp C       &kp D       &kp V    &kp K    &kp H                &kp COMMA  &kp DOT  &kp FSLH  &td CAPS RSHFT
                                              &to BASE    &lt MEDIA SPACE  &kp LCMD  &kp DEL  &hm RIGHT_ALT SPACE  &to MEDIA
            >;
        };
    };
};
